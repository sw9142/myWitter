{"version":3,"sources":["config/FirebaseConfig.js","fbase.js","routes/AuthForm.js","routes/Auth.js","routes/MyWeetFactory.js","routes/Weet.js","routes/Home.js","routes/Nav.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","firebaseInstance","authService","auth","storageService","storage","dbService","firestore","AuthForm","msg","useState","Email","setEmail","Password","setPassword","NewUser","setNewUser","Msg","setMsg","useEffect","onChangeHandler","e","target","name","value","onSubmitHandler","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","console","log","message","onSubmit","className","type","placeholder","required","onChange","onClick","prev","Auth","setmsg","onSocialHandler","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","catch","err","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","MyWeetFactory","UserInfo","Myweets","setMyweets","Attachchment","setAttachchment","onSubmitWeets","attachmentUrl","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","text","addedDate","Date","now","userId","maxLength","for","faPlus","id","accept","file","files","fileReader","FileReader","onloadend","finishedEvent","currentTarget","result","readAsDataURL","opacity","src","alt","backgroundImage","faTimes","Weet","weet","isOwner","UpdatedText","setUpdatedText","WantToEdit","setWantToEdit","doc","update","autoFocus","width","height","pre","faPencilAlt","window","confirm","delete","refFromURL","faTrash","Home","WeetList","setWeetList","orderBy","onSnapshot","snapshot","weetArray","docs","map","data","marginTop","Nav","display","justifyContent","to","marginLeft","flexDirection","alignItems","fontSize","faUser","textAlign","displayName","Profile","refreshUser","ProfileUpdate","setProfileUpdate","history","useHistory","onUpdateSubmit","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","margin","exact","path","App","Init","setInit","setUserInfo","onAuthStateChanged","user","arg","Boolean","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58b35afb.chunk.js","sourcesContent":["const firebaseConfig = {\n  apiKey: \"AIzaSyDawrNmOsZX07ZQnX_WvJfxocbOrH_2_lA\",\n  authDomain: \"mywitter-9cbd6.firebaseapp.com\",\n  projectId: \"mywitter-9cbd6\",\n  storageBucket: \"mywitter-9cbd6.appspot.com\",\n  messagingSenderId: \"377035296136\",\n  appId: \"1:377035296136:web:365f12b9118d7031d27e3d\",\n};\nexport default firebaseConfig;\n","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\nimport firebaseConfig from \"./config/FirebaseConfig\";\n\n// Your web app's Firebase configuration\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const storageService = firebase.storage();\nexport const dbService = firebase.firestore();\n","import React, { useState, useEffect } from \"react\";\nimport { authService } from \"../fbase\";\n\nfunction AuthForm({ msg }) {\n  const [Email, setEmail] = useState(\"\");\n  const [Password, setPassword] = useState(\"\");\n  const [NewUser, setNewUser] = useState(true);\n  const [Msg, setMsg] = useState(\"\");\n\n  useEffect(() => {\n    setMsg(msg);\n  }, []);\n\n  const onChangeHandler = (e) => {\n    const { name, value } = e.target;\n    if (name === \"Email\") {\n      setEmail(value);\n    } else {\n      setPassword(value);\n    }\n  };\n\n  const onSubmitHandler = async (e) => {\n    e.preventDefault();\n\n    try {\n      if (NewUser) {\n        await authService.createUserWithEmailAndPassword(Email, Password);\n      } else {\n        await authService.signInWithEmailAndPassword(Email, Password);\n      }\n    } catch (err) {\n      if (err) {\n        console.log(\"err: \", err);\n        setMsg(err.message);\n      }\n    }\n  };\n\n  const toggleAccount = () => {\n    console.log(\"am i?\");\n    setNewUser((prev) => !prev);\n  };\n\n  return (\n    <>\n      <form onSubmit={onSubmitHandler} className=\"container\">\n        <input\n          type=\"text\"\n          name=\"Email\"\n          placeholder=\"Email\"\n          required\n          onChange={onChangeHandler}\n          value={Email}\n          className=\"authInput\"\n        />\n        <input\n          type=\"password\"\n          name=\"Password\"\n          placeholder=\"Passoword\"\n          required\n          onChange={onChangeHandler}\n          value={Password}\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={NewUser ? \"Create Account\" : \"Sign In\"}\n        />\n        <div className=\"authError\">{Msg}</div>\n      </form>\n\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {NewUser ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n}\n\nexport default AuthForm;\n","import React, { useState } from \"react\";\nimport { authService, firebaseInstance } from \"../fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nimport AuthForm from \"./AuthForm\";\n\nexport default function Auth() {\n  const [msg, setmsg] = useState(\"\");\n  const onSocialHandler = async (e) => {\n    let provider;\n    const { name } = e.target;\n\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    await authService.signInWithPopup(provider).catch((err) => {\n      console.log(\"Err: \", err);\n      setmsg(err.message);\n    });\n  };\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n\n      <AuthForm msg={msg} />\n\n      <div className=\"authBtns\">\n        <button name=\"google\" onClick={onSocialHandler} className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button name=\"github\" onClick={onSocialHandler} className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { dbService, storageService } from \"../fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction MyWeetFactory({ UserInfo }) {\n  const [Myweets, setMyweets] = useState(\"\");\n  const [Attachchment, setAttachchment] = useState();\n\n  const onMyweet = (e) => {\n    setMyweets(e.target.value);\n  };\n  const onSubmitWeets = async (e) => {\n    e.preventDefault();\n    let attachmentUrl = \"\";\n    if (Attachchment) {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${UserInfo.uid}/${uuidv4()}`);\n\n      const response = await attachmentRef.putString(Attachchment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n\n    dbService.collection(\"myWeets\").add({\n      text: Myweets,\n      addedDate: Date.now(),\n      userId: UserInfo.uid,\n      attachmentUrl,\n    });\n    setMyweets(\"\");\n    setAttachchment(\"\");\n  };\n\n  const onFileHandler = (e) => {\n    const file = e.target.files[0];\n\n    const fileReader = new FileReader();\n    fileReader.onloadend = (finishedEvent) => {\n      setAttachchment(finishedEvent.currentTarget.result);\n    };\n    fileReader.readAsDataURL(file);\n  };\n\n  const onClearAttachment = () => {\n    setAttachchment(null);\n  };\n  return (\n    <>\n      <form onSubmit={onSubmitWeets} className=\"factoryForm\">\n        <div className=\"factoryInput__container\">\n          <input\n            className=\"factoryInput__input\"\n            type=\"text\"\n            placeholder=\"What's on your mind?\"\n            name=\"myWeets\"\n            value={Myweets}\n            onChange={onMyweet}\n            maxLength={120}\n          />\n          <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n        </div>\n\n        <label for=\"attach-file\" className=\"factoryInput__label\">\n          <span>Add photos</span>\n          <FontAwesomeIcon icon={faPlus} />\n        </label>\n        <input\n          id=\"attach-file\"\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={onFileHandler}\n          style={{\n            opacity: 0,\n          }}\n        />\n        {Attachchment && (\n          <div className=\"factoryForm__attachment\">\n            <img\n              src={Attachchment}\n              alt=\"attachment\"\n              style={{\n                backgroundImage: Attachchment,\n              }}\n            />\n            <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n              <span>Remove</span>\n              <FontAwesomeIcon icon={faTimes} />\n            </div>\n          </div>\n        )}\n      </form>\n    </>\n  );\n}\n\nexport default MyWeetFactory;\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"../fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction Weet({ weet, isOwner }) {\n  const [UpdatedText, setUpdatedText] = useState(weet.text);\n  const [WantToEdit, setWantToEdit] = useState(false);\n\n  const onDeleteHandler = () => {\n    const okay = window.confirm(\"Are you sure to delete this Myweet?\");\n    if (okay) {\n      dbService.doc(`myWeets/${weet.id}`).delete();\n      storageService.refFromURL(weet.attachmentUrl).delete();\n    }\n  };\n\n  const onCancelHandler = (e) => {\n    if (e.target.name === \"cancel\") {\n      setWantToEdit(false);\n    }\n  };\n\n  const onToggleHandler = () => {\n    setWantToEdit((pre) => !pre);\n  };\n  const updateHandler = (e) => {\n    setUpdatedText(e.target.value);\n  };\n\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    setUpdatedText(e.target.value);\n    console.log(\"weet.text: \", weet.text, \"  \", \"UpdatedText: \", UpdatedText);\n    dbService.doc(`myWeets/${weet.id}`).update({\n      text: UpdatedText,\n    });\n    setWantToEdit(false);\n  };\n\n  return (\n    <div className=\"nweet\">\n      {WantToEdit ? (\n        <>\n          <form onSubmit={onSubmitHandler} className=\"container nweetEdit\">\n            <input\n              type=\"text\"\n              placeholder=\"edit your myweet\"\n              onChange={updateHandler}\n              value={UpdatedText}\n              required\n              autoFocus\n              className=\"formInput\"\n            />\n            <input\n              type=\"submit\"\n              name=\"submit\"\n              value=\"Update\"\n              className=\"formBtn\"\n            />\n            <button\n              name=\"cancel\"\n              onClick={onCancelHandler}\n              className=\"formBtn cancelBtn\"\n            >\n              Cancel\n            </button>\n          </form>\n        </>\n      ) : (\n        <>\n          <h4>{weet.text}</h4>\n          {weet.attachmentUrl && (\n            <img\n              src={weet.attachmentUrl}\n              alt=\"attachment\"\n              width=\"50px\"\n              height=\"50px\"\n            />\n          )}\n          {isOwner && (\n            <div className=\"nweet__actions\">\n              <span onClick={onToggleHandler}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n              <span onClick={onDeleteHandler}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Weet;\n","import React, { useState, useEffect } from \"react\";\nimport { dbService } from \"../fbase\";\nimport MyWeetFactory from \"./MyWeetFactory\";\n\nimport Weet from \"./Weet\";\n\nexport default function Home({ UserInfo }) {\n  const [WeetList, setWeetList] = useState([]);\n\n  useEffect(() => {\n    dbService\n      .collection(\"myWeets\")\n      .orderBy(\"addedDate\", \"desc\")\n      .onSnapshot((snapshot) => {\n        const weetArray = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setWeetList(weetArray);\n      });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <MyWeetFactory UserInfo={UserInfo} />\n      <div style={{ marginTop: 30 }}>\n        {WeetList.map((weet) => (\n          <div key={weet.id}>\n            <Weet weet={weet} isOwner={weet.userId === UserInfo.uid} />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction Nav({ UserInfo }) {\n  console.log(\"UserInfo.displayName In Nav: \", UserInfo);\n  return (\n    <div>\n      <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n        <li>\n          <Link to=\"/\" style={{ width: \"50px\" }}>\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n          </Link>\n        </li>\n        <li>\n          <Link\n            to=\"/profile\"\n            style={{\n              marginLeft: 10,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              width: \"50px\",\n              fontSize: 12,\n            }}\n          >\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n\n            <span style={{ marginTop: 10, textAlign: \"center\" }}>\n              {UserInfo.displayName\n                ? `${UserInfo.displayName}'s Profile`\n                : \"Profile\"}\n            </span>\n          </Link>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport default Nav;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { authService } from \"../fbase\";\n\nexport default function Profile({ UserInfo, refreshUser }) {\n  const [ProfileUpdate, setProfileUpdate] = useState(UserInfo.displayName);\n  console.log(\"UserInfo.displayName in Profile: \", UserInfo.displayName);\n\n  const history = useHistory();\n  const onLogout = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n\n  const onUpdateProfile = (e) => {\n    setProfileUpdate(e.target.value);\n  };\n\n  const onUpdateSubmit = async () => {\n    if (UserInfo.displayName !== ProfileUpdate) {\n      await UserInfo.updateProfile({\n        displayName: ProfileUpdate,\n      });\n      refreshUser();\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"profileTitle\">\n        {\" \"}\n        {UserInfo.displayName}'s Profile Page{\" \"}\n      </div>\n\n      <>\n        <form className=\"profileForm\">\n          <input\n            type=\"text\"\n            value={ProfileUpdate}\n            onChange={onUpdateProfile}\n            autoFocus\n            className=\"formInput\"\n          />\n          <button\n            onClick={onUpdateSubmit}\n            className=\"formBtn\"\n            style={{\n              marginTop: 10,\n            }}\n          >\n            Update Profile\n          </button>\n        </form>\n      </>\n      <button className=\"formBtn cancelBtn logOut\" onClick={onLogout}>\n        Logout\n      </button>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Nav from \"../routes/Nav\";\nimport Profile from \"../routes/Profile\";\n\nexport default function AppRouter({ isLoggedIn, UserInfo, refreshUser }) {\n  console.log(\"UserInfo.displayName in Router: \", UserInfo);\n  return (\n    <Router>\n      {isLoggedIn && <Nav UserInfo={UserInfo} />}\n\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: \"100%\",\n              margin: \"0 auto\",\n              marginTop: 80,\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home UserInfo={UserInfo} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile UserInfo={UserInfo} refreshUser={refreshUser} />\n            </Route>\n          </div>\n        ) : (\n          <Route exact path=\"/\">\n            <Auth />\n          </Route>\n        )}\n      </Switch>\n    </Router>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"./Router\";\nimport { authService } from \"../fbase\";\n\nfunction App() {\n  const [Init, setInit] = useState(false);\n  const [UserInfo, setUserInfo] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserInfo({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (arg) => user.updateProfile(arg),\n        });\n      } else {\n        setUserInfo(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserInfo({\n      uid: user.uid,\n      displayName: user.displayName,\n      updateProfile: (arg) => user.updateProfile(arg),\n    });\n  };\n\n  return (\n    <>\n      {Init ? (\n        <AppRouter\n          isLoggedIn={Boolean(UserInfo)}\n          UserInfo={UserInfo}\n          refreshUser={refreshUser}\n        />\n      ) : (\n        \"Loading...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./app.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}